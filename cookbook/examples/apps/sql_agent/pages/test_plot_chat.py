import streamlit as st
import requests
import json
from datetime import datetime, timedelta
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# C·∫•u h√¨nh trang
st.set_page_config(
    page_title="Plot Chat Tester",
    page_icon="üí¨",
    layout="wide"
)

# API endpoint
API_URL = "http://localhost:8000"

def call_plot_api(command: str) -> dict:
    """G·ªçi API ƒë·ªÉ t·∫°o bi·ªÉu ƒë·ªì"""
    try:
        response = requests.post(
            f"{API_URL}/plot/command",
            json={"command": command}
        )
        if response.status_code == 200:
            return response.json()
        else:
            return {"error": f"API error: {response.text}"}
    except Exception as e:
        return {"error": str(e)}

# Kh·ªüi t·∫°o session state
if "messages" not in st.session_state:
    st.session_state.messages = []

# Giao di·ªán Streamlit
st.title("üí¨ Plot Chat Tester")
st.write("Test ch·ª©c nƒÉng plot th√¥ng qua chat API")

# Hi·ªÉn th·ªã l·ªãch s·ª≠ chat
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        if message["role"] == "assistant" and "plot_url" in message:
            st.image(message["plot_url"], caption=message["content"])
        else:
            st.markdown(message["content"])

# Input chat
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n v·ªÅ bi·ªÉu ƒë·ªì ch·ª©ng kho√°n..."):
    # Th√™m tin nh·∫Øn ng∆∞·ªùi d√πng v√†o l·ªãch s·ª≠
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # X·ª≠ l√Ω c√¢u h·ªèi v√† hi·ªÉn th·ªã ph·∫£n h·ªìi
    with st.chat_message("assistant"):
        with st.spinner("ƒêang x·ª≠ l√Ω..."):
            response = call_plot_api(prompt)
            
            if "error" in response:
                st.error(response["error"])
                st.session_state.messages.append({"role": "assistant", "content": response["error"]})
            else:
                st.image(response["plot_url"], caption=response["message"])
                st.session_state.messages.append({
                    "role": "assistant",
                    "content": response["message"],
                    "plot_url": response["plot_url"]
                })

# Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
with st.expander("H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng"):
    st.write("""
    B·∫°n c√≥ th·ªÉ h·ªèi v·ªÅ bi·ªÉu ƒë·ªì ch·ª©ng kho√°n b·∫±ng c√°ch:
    1. Ch·ªâ ƒë·ªãnh m√£ ch·ª©ng kho√°n trong ngo·∫∑c ƒë∆°n (v√≠ d·ª•: (MSFT), (AAPL))
    2. Ch·ªâ ƒë·ªãnh kho·∫£ng th·ªùi gian (v√≠ d·ª•: from June 1, 2024 to September 30, 2024)
    
    V√≠ d·ª•:
    - "Plot the time series of Microsoft (MSFT) stock closing price from June 1, 2024 to September 30, 2024"
    - "Show me the stock price of Apple (AAPL) from January 1, 2024 to March 31, 2024"
    - "Plot Google (GOOGL) stock price from April 1, 2024 to June 30, 2024"
    """)

# N√∫t quay l·∫°i trang ch√≠nh
if st.button("Quay l·∫°i trang ch√≠nh"):
    st.switch_page("app.py") 